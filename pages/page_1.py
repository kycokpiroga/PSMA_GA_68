import streamlit as st
import pandas as pd
import numpy as np
import wget
import pickle
from sklearn.preprocessing import PolynomialFeatures
from sklearn.linear_model import LinearRegression
from sklearn.pipeline import make_pipeline
from sklearn.metrics import mean_squared_error, r2_score
import datetime
def func_page_1():
    st.set_page_config(
        page_title="PSMA",
        page_icon="üëã",
    )
    st.header('DOTA-PSMA-617_Ga-68_2', divider='rainbow')

def preparation():
    psma_617_df = pd.read_csv('PSMA.csv')
    output = psma_617_df['A']
    features = psma_617_df[['day_from_calib_gen', 'k_rec']]
    return features, output

def ml_polynomial(features, output):
    degree = 4
    model = make_pipeline(PolynomialFeatures(degree), LinearRegression())

    # Fit the model
    model.fit(features, output)
    
    # Predict
    self_pred = model.predict(features)
    
    # Calculate scores
    mse = mean_squared_error(output, self_pred)
    r2 = r2_score(output, self_pred)
    
    return self_pred, mse, r2

# Prepare the data
features, output = preparation()

# Perform polynomial regression
predictions, mse, r2 = ml_polynomial(features, output)

st.write("Mean Squared Error:", mse)
st.write("R-squared Score:", r2)
st.header('–í–Ω–µ—Å–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ, –î–∞—Ç–∞ –∫–∞–ª–∏–±—Ä–æ–≤–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –≥–∞–ª–ª–∏—è, –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–∏–Ω—Ç–µ–∑–∞ –∏–ª–∏ –¢–≠, –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–æ–≥–æ —Å–∏–Ω—Ç–µ–∑–∞', divider='rainbow')
col1, col2, col3 = st.columns(3)
with col1:
    # –í–≤–æ–¥ –¥–∞—Ç—ã
    date = st.date_input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –∏–∑ –ø–∞—Å–ø–æ—Ä—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞", datetime.date.today())

with col2:
     # –í–≤–æ–¥ –¥–∞—Ç—ã
    date = st.date_input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –ø–µ—Ä–µ–¥–∞—á–∏ –Ω–∞ –ö–ö –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–∏–Ω—Ç–µ–∑–∞ –∏–ª–∏ –¢–≠", datetime.date.today())

    # –í–≤–æ–¥ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å—Ç—Ä–æ–∫–∏
    time_str = st.text_input("–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è", "12:00")

    # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤ –æ–±—ä–µ–∫—Ç –≤—Ä–µ–º–µ–Ω–∏
    try:
        time = datetime.datetime.strptime(time_str, "%H:%M").time()
    except ValueError:
        st.error("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç HH:MM.")
    # –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
    datetime_selected = datetime.datetime.combine(date, time)

with col3:
     # –í–≤–æ–¥ –¥–∞—Ç—ã
    date_2 = st.date_input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –ø–µ—Ä–µ–¥–∞—á–∏ –Ω–∞ –ö–ö –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–æ–≥–æ —Å–∏–Ω—Ç–µ–∑–∞", datetime.date.today())

    # –í–≤–æ–¥ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å—Ç—Ä–æ–∫–∏
    time_str_2 = st.text_input("–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è", "13:00")

    # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤ –æ–±—ä–µ–∫—Ç –≤—Ä–µ–º–µ–Ω–∏
    try:
        time_2 = datetime.datetime.strptime(time_str_2, "%H:%M").time()
    except ValueError:
        st.error("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç HH:MM.")


    # –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
    datetime_selected_2 = datetime.datetime.combine(date_2, time_2)

